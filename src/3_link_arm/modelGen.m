%--------------------------------------------------%
%
% DO NOT EDIT MANUALLY!
% Automatically generated by Maple.
% Created On: Sat May 21 18:55:29 2011
%
%--------------------------------------------------%

%--------------------------------------------------%
%
% Calling mex to compile the C file: cMuscleArm1
%
mex cMuscleArm1.c

%--------------------------------------------------%
%
% Loading up Simulink
% This is needed, otherwise add_ functions won't work
%
simulink;
load_system('simulink');

%--------------------------------------------------%
%
% Calling new_system to create an empty Library named MapleSim_MuscleArm1
%
try close_system('MapleSim_MuscleArm1',0); end;
tmp = dir('MapleSim_MuscleArm1.mdl');
if ~isempty(tmp), delete ('MapleSim_MuscleArm1.mdl'); end;
new_system('MapleSim_MuscleArm1', 'Library');
set_param('MapleSim_MuscleArm1', 'Creator', 'MapleSim');
set_param('MapleSim_MuscleArm1', 'Description', 'Created by MapleSim.');
set_param('MapleSim_MuscleArm1', 'Location', [ 100, 100, 350, 390 ]);

maple_tmpstring = ['<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/1999/REC-html401-19991224/loose.dtd"><html lang="en"><head> <title>cMuscleArm1 :: MapleSim model</title><!-- /*Style taken from http://www.mathworks.com/matlabcentral/fileexchange/\nloadFile.do?objectId=21367&objectType=file*/ -->\n<style type="text/css">\nbody {    background-color: white;    margin:10px;}\nh1 {   color: #990000;   font-size: x-large;}\nh2 {   color: #990000;   font-size: large;   margin-top:0e'];
maple_tmpstring = [maple_tmpstring(1:end), 'x;\n    margin-bottom:0ex;   font-weight:bold;}\nh3 {   color:#990000;    margin-top:0ex;    margin-bottom:0ex;\n    font-weight:bold;    font-size: medium;}\nh4 {   color:black;    margin-top:0ex;    margin-bottom:0ex;\n     font-weight:bold;   font-size: medium;}\n/* Vertical space in tables other than the header and footer banners */\ntable.body {    margin-top: 2ex;    margin-bottom: 2ex;}\n/* Make the text shrink to fit narrow windows, but not stretch too far in wide windows. */\np,h1,h2,di'];
maple_tmpstring = [maple_tmpstring(1:end), 'v.content div {   max-width: 600px;\n   /* Hack for IE6 */\n    width: auto !important; width: 600px;}\npre.codeinput {   background: #EEEEEE;   padding: 10px;}\n@media print {   pre.codeinput {word-wrap:break-word; width:100%%;}\n}\nspan.keyword {color: #0000FF}span.comment {color: #228B22}\nspan.string {color: #A020F0}span.untermstring {color: #B20000}\nspan.syscmd {color: #B28C00}\npre.error {   color: red;}\np.footer {   text-align: right;   font-size: xx-small;\n   font-weight: lighter;   f'];
maple_tmpstring = [maple_tmpstring(1:end), 'ont-style: italic;   color: gray;\n}</style><meta name="generator"\n content="DocBook XSL Stylesheets V1.52.2">\n<meta name="chunktype" content="refpage">\n<meta http-equiv="Content-Script-Type" content="text/javascript"></head>\n<body><a name="top_of_page"></a>\n<p style="font-size:1px;"><a name="f8-894621"></a>\n<a name="transferfcn"></a>\n<a class="indexterm" name="zmw57dd0e42758"></a></p>\n<h1 class="reftitle">cMuscleArm1</h1>\n<p>Simulink Block generated by MapleSim Connector</p><p><a name='];
maple_tmpstring = [maple_tmpstring(1:end), '"f8-894627"></a></p>\n<h2>Description <span class="inlinemediaobject"></br></span></h2></br>\n<p><a class="indexterm" name="zmw57dd0e42781"></a></p>\n<p>The cMuscleArm1 block runs in the continuous domain system and is created in the MapleSim modeling environment. The block is converted to simulink using MapleSim Connector. The block is a 6 input, 6 output system.</p>\n<p><a name="f8-894641"></a></p></br><h3>System Variables</h3></br>\n<p>The following variables are used in the user defined func'];
maple_tmpstring = [maple_tmpstring(1:end), 'tion</p></br>\n Output Variable(s)<dl></br><dd>y[ 0] = `Main.MuscleArm1::ElbowAngle`(t)</dd></br><dd>y[ 1] = `Main.MuscleArm1::ShoulderAngle`(t)</dd></br><dd>y[ 2] = `Main.MuscleArm1::WristAngle`(t)</dd></br><dd>y[ 3] = `Main.MuscleArm1::emR1`(t)</dd></br><dd>y[ 4] = `Main.MuscleArm1::emR2`(t)</dd></br><dd>y[ 5] = `Main.MuscleArm1::emR3`(t)</dd></br></dl></br>\n\n Input Variable(s)<dl></br><dd>u[ 0] = `Main.MuscleArm1::ma1`(t)</dd></br><dd>u[ 1] = `Main.MuscleArm1::ma2`(t)</dd></br><dd>u[ 2] = `'];
maple_tmpstring = [maple_tmpstring(1:end), 'Main.MuscleArm1::ma3`(t)</dd></br><dd>u[ 3] = `Main.MuscleArm1::ma4`(t)</dd></br><dd>u[ 4] = `Main.MuscleArm1::ma7`(t)</dd></br><dd>u[ 5] = `Main.MuscleArm1::ma8`(t)</dd></br></dl></br>\n\n State Variable(s)<dl></br><dd>x[ 0] = `Main.MuscleArm1.Muscle1::HillMuscle1::D4.x`(t)</dd></br><dd>x[ 1] = `Main.MuscleArm1.Muscle2::HillMuscle1::D4.x`(t)</dd></br><dd>x[ 2] = `Main.MuscleArm1.Muscle3::HillMuscle1::D4.x`(t)</dd></br><dd>x[ 3] = `Main.MuscleArm1.Muscle4::HillMuscle1::D4.x`(t)</dd></br><dd>x[ 4'];
maple_tmpstring = [maple_tmpstring(1:end), '] = `Main.MuscleArm1.Muscle7::HillMuscle1::D4.x`(t)</dd></br><dd>x[ 5] = `Main.MuscleArm1.Muscle8::HillMuscle1::D4.x`(t)</dd></br><dd>x[ 6] = `Main.MuscleArm1.DFPSubsys1inst.s_Muscle1_MLength`(t)</dd></br><dd>x[ 7] = diff(`Main.MuscleArm1.DFPSubsys1inst.s_Muscle1_MLength`(t),t)</dd></br><dd>x[ 8] = `Main.MuscleArm1.DFPSubsys1inst.s_Muscle2_MLength`(t)</dd></br><dd>x[ 9] = diff(`Main.MuscleArm1.DFPSubsys1inst.s_Muscle2_MLength`(t),t)</dd></br><dd>x[10] = `Main.MuscleArm1.DFPSubsys1inst.s_Muscle3_'];
maple_tmpstring = [maple_tmpstring(1:end), 'MLength`(t)</dd></br><dd>x[11] = diff(`Main.MuscleArm1.DFPSubsys1inst.s_Muscle3_MLength`(t),t)</dd></br><dd>x[12] = `Main.MuscleArm1.DFPSubsys1inst.s_Muscle4_MLength`(t)</dd></br><dd>x[13] = diff(`Main.MuscleArm1.DFPSubsys1inst.s_Muscle4_MLength`(t),t)</dd></br><dd>x[14] = `Main.MuscleArm1.DFPSubsys1inst.s_Muscle7_MLength`(t)</dd></br><dd>x[15] = diff(`Main.MuscleArm1.DFPSubsys1inst.s_Muscle7_MLength`(t),t)</dd></br><dd>x[16] = `Main.MuscleArm1.DFPSubsys1inst.s_Muscle8_MLength`(t)</dd></br><dd>x'];
maple_tmpstring = [maple_tmpstring(1:end), '[17] = diff(`Main.MuscleArm1.DFPSubsys1inst.s_Muscle8_MLength`(t),t)</dd></br><dd>x[18] = `Main.MuscleArm1.DFPSubsys1inst.theta_Muscle1_R4`(t)</dd></br><dd>x[19] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_Muscle1_R4`(t),t)</dd></br><dd>x[20] = `Main.MuscleArm1.DFPSubsys1inst.theta_Muscle2_R4`(t)</dd></br><dd>x[21] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_Muscle2_R4`(t),t)</dd></br><dd>x[22] = `Main.MuscleArm1.DFPSubsys1inst.theta_Muscle3_R4`(t)</dd></br><dd>x[23] = diff(`Main.MuscleArm1.DF'];
maple_tmpstring = [maple_tmpstring(1:end), 'PSubsys1inst.theta_Muscle3_R4`(t),t)</dd></br><dd>x[24] = `Main.MuscleArm1.DFPSubsys1inst.theta_Muscle4_R4`(t)</dd></br><dd>x[25] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_Muscle4_R4`(t),t)</dd></br><dd>x[26] = `Main.MuscleArm1.DFPSubsys1inst.theta_Muscle7_R4`(t)</dd></br><dd>x[27] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_Muscle7_R4`(t),t)</dd></br><dd>x[28] = `Main.MuscleArm1.DFPSubsys1inst.theta_Muscle8_R4`(t)</dd></br><dd>x[29] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_Muscle8_R4`(t'];
maple_tmpstring = [maple_tmpstring(1:end), '),t)</dd></br><dd>x[30] = `Main.MuscleArm1.DFPSubsys1inst.theta_R1`(t)</dd></br><dd>x[31] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_R1`(t),t)</dd></br><dd>x[32] = `Main.MuscleArm1.DFPSubsys1inst.theta_R2`(t)</dd></br><dd>x[33] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_R2`(t),t)</dd></br><dd>x[34] = `Main.MuscleArm1.DFPSubsys1inst.theta_R3`(t)</dd></br><dd>x[35] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_R3`(t),t)</dd></br></dl></br>\n\n Parameter(s)<dl></br></dl></br>\n\n</p></br>\n<p><a'];
maple_tmpstring = [maple_tmpstring(1:end), ' name="f8-894651"></a></p><h2>Data Type Support</h2></br><p>The cMuscleArm1 block accepts inputs and outputs signals of type <tt>double</tt>.</p>\n<a name="f8-894653"></a><h2>Parameters and Dialog Box</h2></br>\n<dl><dt><a name="zmw57dd0e42948"></a><b><span class="term">Initial Condition</span>s</b></dt><dd></br>\n<p>The row vector of initial conditions. A vector can be specified to initial the state variables of system.\n The default is <tt>[1., 0., 0., 0., 0., 0]</tt>.</p></dd></br></dl></br><'];
maple_tmpstring = [maple_tmpstring(1:end), '/br>\n<dt><a name="zmw57dd0e42968"></a></dt><h2>Characteristics</h2><table cellspacing="0" class="body" cellpadding="4" border="2"><colgroup><col width="41%%"><col width="59%%"></colgroup><tbody>\n<tr valign="top"><td bgcolor="#F2F2F2"><p>Direct Feedthrough</p></td><td bgcolor="#F2F2F2"><p>Yes, only if the block has no state variable.</p></td></tr></br>\n<tr valign="top"><td bgcolor="#F2F2F2"><p>Sample Time</p></td><td bgcolor="#F2F2F2"><p> Continuous</p></td></tr></br>\n<tr valign="top"><td bgc'];
maple_tmpstring = [maple_tmpstring(1:end), 'olor="#F2F2F2"><p>Scalar Expansion</p></td><td bgcolor="#F2F2F2"><p>No</p></td></tr></br>\n<tr valign="top"><td bgcolor="#F2F2F2"><p>State</p></td><td bgcolor="#F2F2F2"><p>Yes</p></td></tr></br>\n<tr valign="top"><td bgcolor="#F2F2F2"><p>Dimensionalized</p></td><td bgcolor="#F2F2F2"><p>Yes. See the description in previous section.</p></td></tr></br>\n<tr valign="top"><td bgcolor="#F2F2F2"><p>Zero Crossing</p></td><td bgcolor="#F2F2F2"><p>No</p></td></tr></br>\n</tbody></table><p></p></br></body>'];
maple_tmpstring = [maple_tmpstring(1:end), '</html>'];

%--------------------------------------------------%
%
% Calling add_block to add a new Subsystem block named MapleSim_MuscleArm1
%
add_block('simulink/Ports & Subsystems/Subsystem', 'MapleSim_MuscleArm1/MapleSim_MuscleArm1');
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'Description', 'Subsystem: MapleSim_MuscleArm1');
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'Position', '[50, 50, 200, 240]');
% Remove default inport and outport of Subsystem
delete_line('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'In1/1', 'Out1/1');
delete_block('MapleSim_MuscleArm1/MapleSim_MuscleArm1/In1');
delete_block('MapleSim_MuscleArm1/MapleSim_MuscleArm1/Out1');

%--------------------------------------------------%
%
% Enabling Mask icon to the block and a% Adding command to draw the mask icon
%
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'Mask', 'on');
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'MaskIconOpaque', 'off');
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'MaskIconUnits', 'pixel');
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'MaskDisplay', 'patch([4, 41, 43, 43, 41, 4, 2, 2, 4], [2, 2, 4, 41, 43, 43, 41, 4, 2], [1, 0.5, 0]);patch([7, 38, 40, 40, 38, 7, 5, 5, 7], [5, 5, 7, 38, 40, 40, 38, 7, 5], [0.96, 0.89, 0.73]);patch([15, 9, 5, 9],[16, 11, 16, 21],[.75, 0, 0]);patch([38, 30, 23, 30],[18, 10, 18, 26],[.75, 0, 0]);patch([23, 19, 16, 19],[14, 10, 14, 18],[.75, 0, 0]);patch([20, 16, 13, 16],[20, 16, 20, 24],[0, 0.34, 0.45]);patch([26, 22, 19, 22],[24, 20, 24, 28],[0.75, 0, 0]);patch([17, 12, 8, 12], [28, 23, 28, 33],[.75, 0, 0]);patch([24, 22, 20, 22],[32, 30, 32, 34],[0, 0.34, 0.45]);color(''blue'');text(55,30,''Generated by'');text(55,15,''MapleSim'');');
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'Masktype', 'MuscleArm1');
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'MaskDescription', sprintf('Variable Definition\n\nVariable(s) for Initial Condition Vector:\n     x[ 0] = `Main.MuscleArm1.Muscle1::HillMuscle1::D4.x`(t)\n     x[ 1] = `Main.MuscleArm1.Muscle2::HillMuscle1::D4.x`(t)\n     x[ 2] = `Main.MuscleArm1.Muscle3::HillMuscle1::D4.x`(t)\n     x[ 3] = `Main.MuscleArm1.Muscle4::HillMuscle1::D4.x`(t)\n     x[ 4] = `Main.MuscleArm1.Muscle7::HillMuscle1::D4.x`(t)\n     x[ 5] = `Main.MuscleArm1.Muscle8::HillMuscle1::D4.x`(t)\n     x[ 6] = `Main.MuscleArm1.DFPSubsys1inst.s_Muscle1_MLength`(t)\n     x[ 7] = diff(`Main.MuscleArm1.DFPSubsys1inst.s_Muscle1_MLength`(t),t)\n     x[ 8] = `Main.MuscleArm1.DFPSubsys1inst.s_Muscle2_MLength`(t)\n     x[ 9] = diff(`Main.MuscleArm1.DFPSubsys1inst.s_Muscle2_MLength`(t),t)\n     x[10] = `Main.MuscleArm1.DFPSubsys1inst.s_Muscle3_MLength`(t)\n     x[11] = diff(`Main.MuscleArm1.DFPSubsys1inst.s_Muscle3_MLength`(t),t)\n     x[12] = `Main.MuscleArm1.DFPSubsys1inst.s_Muscle4_MLength`(t)\n     x[13] = diff(`Main.MuscleArm1.DFPSubsys1inst.s_Muscle4_MLength`(t),t)\n     x[14] = `Main.MuscleArm1.DFPSubsys1inst.s_Muscle7_MLength`(t)\n     x[15] = diff(`Main.MuscleArm1.DFPSubsys1inst.s_Muscle7_MLength`(t),t)\n     x[16] = `Main.MuscleArm1.DFPSubsys1inst.s_Muscle8_MLength`(t)\n     x[17] = diff(`Main.MuscleArm1.DFPSubsys1inst.s_Muscle8_MLength`(t),t)\n     x[18] = `Main.MuscleArm1.DFPSubsys1inst.theta_Muscle1_R4`(t)\n     x[19] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_Muscle1_R4`(t),t)\n     x[20] = `Main.MuscleArm1.DFPSubsys1inst.theta_Muscle2_R4`(t)\n     x[21] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_Muscle2_R4`(t),t)\n     x[22] = `Main.MuscleArm1.DFPSubsys1inst.theta_Muscle3_R4`(t)\n     x[23] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_Muscle3_R4`(t),t)\n     x[24] = `Main.MuscleArm1.DFPSubsys1inst.theta_Muscle4_R4`(t)\n     x[25] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_Muscle4_R4`(t),t)\n     x[26] = `Main.MuscleArm1.DFPSubsys1inst.theta_Muscle7_R4`(t)\n     x[27] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_Muscle7_R4`(t),t)\n     x[28] = `Main.MuscleArm1.DFPSubsys1inst.theta_Muscle8_R4`(t)\n     x[29] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_Muscle8_R4`(t),t)\n     x[30] = `Main.MuscleArm1.DFPSubsys1inst.theta_R1`(t)\n     x[31] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_R1`(t),t)\n     x[32] = `Main.MuscleArm1.DFPSubsys1inst.theta_R2`(t)\n     x[33] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_R2`(t),t)\n     x[34] = `Main.MuscleArm1.DFPSubsys1inst.theta_R3`(t)\n     x[35] = diff(`Main.MuscleArm1.DFPSubsys1inst.theta_R3`(t),t)\n\nVariable(s) in output vector:\n     y[ 0] = `Main.MuscleArm1::ElbowAngle`(t)\n     y[ 1] = `Main.MuscleArm1::ShoulderAngle`(t)\n     y[ 2] = `Main.MuscleArm1::WristAngle`(t)\n     y[ 3] = `Main.MuscleArm1::emR1`(t)\n     y[ 4] = `Main.MuscleArm1::emR2`(t)\n     y[ 5] = `Main.MuscleArm1::emR3`(t)\n\nVariable(s) in input vector:\n     u[ 0] = `Main.MuscleArm1::ma1`(t)\n     u[ 1] = `Main.MuscleArm1::ma2`(t)\n     u[ 2] = `Main.MuscleArm1::ma3`(t)\n     u[ 3] = `Main.MuscleArm1::ma4`(t)\n     u[ 4] = `Main.MuscleArm1::ma7`(t)\n     u[ 5] = `Main.MuscleArm1::ma8`(t)\n\nVariable(s) in the parameter vector:\n'));
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'Maskhelp', sprintf(maple_tmpstring));

%--------------------------------------------------%
%
% Adding Mask to the block
%
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'MaskPromptString', 'Initial Conditions:');
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'MaskVariables', 'ic=@1;');
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'MaskValueString', '[.125090126206834, .0565902847276667, .142797649926544, .101038760757725, .245996838252594, .217536963457561, .125090126206834, 0., .0565902847276667, 0., .142797649926544, 0., .101038760757725, 0., .245996838252594, 0., .217536963457561, 0., .469255383384679, 0., 1.54307525393538, 0., .149106180027477, 0., -.211524990023434, 0., .100776408721091, 0., -.163249811549842, 0., .785398163397448, 0., .785398163397448, 0., .785398163397448, 0.]');

%--------------------------------------------------%
%
% Calling add_block to add an S-Function block MapleSim_MuscleArm1
% Also, connects the MUX to the input
%
add_block('simulink/User-Defined Functions/S-Function', 'MapleSim_MuscleArm1/MapleSim_MuscleArm1/MapleSim_MuscleArm1');
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'FunctionName', 'cMuscleArm1', 'Parameters', 'ic');
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'Position', '[135, 15, 285, 91]');
set_param('MapleSim_MuscleArm1/MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'Description', 'Generated by MapleSim');

%--------------------------------------------------%
%
% Add new inport block and connect to the MapleSim_MuscleArm1 block
%
add_block('simulink/Sources/In1', 'MapleSim_MuscleArm1/MapleSim_MuscleArm1/inputs[6]', 'Position', '[32, 45, 48, 61]');
add_line('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'inputs[6]/1', 'MapleSim_MuscleArm1/1', 'autorouting', 'on');

%--------------------------------------------------%
%
% Add new outport block and connect to the MapleSim_MuscleArm1 block
%
add_block('simulink/Sinks/Out1', 'MapleSim_MuscleArm1/MapleSim_MuscleArm1/outputs[6]', 'Position', '[372, 45, 388, 61]');
add_line('MapleSim_MuscleArm1/MapleSim_MuscleArm1', 'MapleSim_MuscleArm1/1', 'outputs[6]/1', 'autorouting', 'on');

%--------------------------------------------------%
%
% Calling save_system and open_system
%
save_system('MapleSim_MuscleArm1');
open_system('MapleSim_MuscleArm1');
